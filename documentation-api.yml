openapi: 3.0.0
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/nsantana/Image-api-pyramid/1.0.0
info:
  description: Image Api build. [Source Code available ](https://github.com/nielsonsantana/image-api)
  version: "1.0.0"
  title: Image Store API
  contact:
    email: nielsonnas@gmail.com
#  license:
#    name: Apache 2.0
#    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

paths:
  /image:
    get:
      tags:
        - image
      summary: Get image list
      description: Get image list. Need be authenticated.
      operationId: image_list_get
      responses:
        '200':
          description: A list of Images
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseList'
      security:
      - api_key: []
    post:
      tags:
        - image
      summary: Create image
      description: Create an image on server. Need be authenticated. 
      operationId: image_list_post
      responses:
        default:
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
        description: Created image object
        required: true
      security:
      - api_key: []
  '/image/{id}':
    get:
      tags:
        - image
      summary: Get image by id
      operationId: image_get
      parameters:
        - name: id
          in: path
          description: The id that needs to be fetched a image.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid id supplied
        '404':
          description: Image not found
    put:
      tags:
        - image
      summary: Updated image
      description: Update an image. Need be authenticated.
      operationId: image_put
      parameters:
        - name: id
          in: path
          description: id that need to be updated
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid image supplied
        '404':
          description: Image not found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
        description: Updated image object
        required: true
    delete:
      tags:
        - image
      summary: Delete Image
      description: Delete an image on storage. Need be authenticated.
      operationId: image_delete
      parameters:
        - name: id
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid image id supplied
        '404':
          description: Image not found
  /media/{filename}:
    get:
      summary: Get image file by filename
      description: Get image list. Need be authenticated.
      operationId: getImageList
      parameters:
        - name: filename
          in: path
          description: Image file name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Image file
          content:
            application/octet-stream:
              schema:
                format: binary
      security:
      - api_key: []
components:
  schemas:
    Image:
      type: object
      properties:
        id:
          type: integer
          format: int64
        filename:
          type: string
        size:
          type: integer
        width:
          type: integer
        length:
          type: integer
        image_url:
          type: string
        format:
          type: string
          description: Image format
          enum:
            - png
            - jpeg
    ApiResponseList:
      type: object
      properties:
        code:
          type: integer
        type:
          type: string
        message:
          type: string
        content:
          type: array
          items:
            $ref: '#/components/schemas/Image'
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
        type:
          type: string
        message:
          type: string
        content:
          $ref: '#/components/schemas/Image'
  requestBodies:
    Image:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Image'
      description: Image object to be stored
      required: true
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header